terminal ID: /[_a-zA-Z][_a-zA-Z0-9]*/;
{% for type in primitiveTypes %}

{{- getTerminal(type) | safe}}
{% endfor %}

{#-
{% for iface in interfaces %}
{{ iface.name }} return {{ iface.name -}}:

    {%for attr in iface.attributes %}
        {%- if attr.type.$type == 'ArrayType' %}
    "["
        ({{attr.name}} += {{attr.type.elementType.typeRef.$refText}}
        ("," {{attr.name}} += {{attr.type.elementType.typeRef.$refText}})*)?
    "]"
        
        {%-elif attr.type.$type == 'TypeAttribute'-%}
      
    {{-attr.name}} {%if attr.isOptional%} ?= {%else%} = {%endif%} {{attr.type.name}}

        {%-elif attr.type.$type == 'SimpleType'-%}

    
    {{attr.name}} {%if attr.isOptional%} ?= {%else%} = {%endif%} {{attr.type.typeRef.$refText}}
        {%elif attr.type.$type == 'ReferenceType'-%}
        
        {%-endif-%}

    {%endfor%}

{% endfor %}
#}

{%-for enum in enumerations%}
{%if enum.types.length == 1 %}
interface {{enum.types[0].stringType}} {} //! an empty interface was generated because the corresponding enumeration was empty
{%else%}
type {{enum.types[0].stringType}} = {{enum.types[1].stringType | safe}} {%for type in enum.types.slice(2) %} | {{type.stringType | safe}} {%endfor%}
{%-endif%}

{%endfor%}
{% for iface in interfaces %}
interface {{ iface.name }}
    {%- if iface.superTypes.length > 0 %} extends {% for superT in iface.superTypes %}
            {%- if loop.first %}{{ superT.$refText }}
            {%- else %}, {{ superT.$refText }}
            {%- endif %}
        {%- endfor %}
    {%- endif -%}
{
    {%- for attr in iface.attributes %}
    {{ attr.name }}: {% if attr.type.$type == "ReferenceType" %}@{% endif %}{{ getTypeString(attr.type) }};
    {%- endfor %}
}
{% endfor %}